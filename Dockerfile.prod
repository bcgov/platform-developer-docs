# Build stage
FROM node:lts-alpine3.18 as build-stage

# Install node-gyp dependencies that aren't present in node:lts-alpine
ENV PYTHONUNBUFFERED=1
RUN apk add --update --no-cache g++ make python3 && ln -sf python3 /usr/bin/python
# RUN python3 -m ensurepip
RUN apk add py3-pip
RUN pip3 install --break-system-packages --no-cache --upgrade pip setuptools

# Copy package.json and package-lock.json, install dependencies
WORKDIR /app
COPY package*.json .
RUN npm install

# Copy remaining files, run build script with no ANSI color codes
COPY . .
RUN NO_COLOR=true npm run build

# Production stage
FROM nginxinc/nginx-unprivileged:1.20 as production-stage

# Copy nginx configuration
COPY ./nginx.conf /etc/nginx/nginx.conf

# Copy built front-end files to nginx public web root folder
COPY --from=build-stage /app/public /usr/share/nginx/html

EXPOSE 8080
CMD ["nginx", "-g", "daemon off;"]
